{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import Coco from'./Coco';import'./Test.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Test=()=>{const[userInput,setUserInput]=useState('');const[conversationHistory,setConversationHistory]=useState([]);const[messages,setMessages]=useState([]);const[isTyping,setIsTyping]=useState(false);const[fontSize,setFontSize]=useState(19);// Default font size\nconst navigate=useNavigate();const addMessage=(content,className)=>{setMessages(prevMessages=>[...prevMessages,{content,className}]);};const sendMessage=async()=>{if(!userInput.trim())return;// Display user message\naddMessage(userInput,'user-message');setConversationHistory(prevHistory=>[...prevHistory,{role:'user',content:userInput}]);setUserInput('');try{setIsTyping(true);// Show typing animation\n// Prepare JSON data\nconst payload={userInput:userInput,history:JSON.stringify(conversationHistory)};// Send message to the server\nconst response=await fetch('/submit',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});const data=await response.json();setIsTyping(false);// Hide typing animation\n// Display bot response\naddMessage(data.response,'bot-message');setConversationHistory(prevHistory=>[...prevHistory,{role:'assistant',content:data.response}]);}catch(error){console.error('Error:',error);setIsTyping(false);// Hide typing animation\naddMessage('An error occurred while sending your message.','bot-message');}};const handleKeyDown=event=>{if(event.key==='Enter'){sendMessage();}};const changeFontSize=adjustment=>{setFontSize(prevSize=>Math.max(12,Math.min(36,prevSize+adjustment)));// Restrict between 12px and 36px\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"triangle-container\",children:[/*#__PURE__*/_jsx(\"svg\",{className:\"triangle\",xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 100 125\",preserveAspectRatio:\"none\",children:/*#__PURE__*/_jsx(\"path\",{className:\"wave\",d:\"M 0,50 Q 20,35 45,40 T 100,15 L 100,0 L 0,0 Z\",fill:\"#5A9BFF\",transform:\"skewY(-15)\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-invis\",onClick:()=>navigate('/'),children:/*#__PURE__*/_jsx(\"span\",{className:\"material-icons invis\",children:\"arrow_back_ios\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"coco-container\",children:/*#__PURE__*/_jsx(Coco,{className:\"coco-small\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"font-size-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>changeFontSize(-2),children:\"A-\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>changeFontSize(2),children:\"A+\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"chat-box\",className:\"chat-box\",children:[messages.map((msg,index)=>/*#__PURE__*/_jsx(\"div\",{className:`chat-message ${msg.className}`,style:{fontSize:`${fontSize}px`},children:msg.content},index)),isTyping&&/*#__PURE__*/_jsxs(\"div\",{className:\"chat-message bot-message typing-animation\",children:[/*#__PURE__*/_jsx(\"span\",{children:\".\"}),/*#__PURE__*/_jsx(\"span\",{children:\".\"}),/*#__PURE__*/_jsx(\"span\",{children:\".\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userInput,onChange:e=>setUserInput(e.target.value),onKeyDown:handleKeyDown,placeholder:\"Type a message...\"}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,children:/*#__PURE__*/_jsx(\"span\",{className:\"material-icons icon-send\",children:\"send\"})})]})]})]});};export default Test;","map":{"version":3,"names":["React","useState","useNavigate","Coco","jsx","_jsx","jsxs","_jsxs","Test","userInput","setUserInput","conversationHistory","setConversationHistory","messages","setMessages","isTyping","setIsTyping","fontSize","setFontSize","navigate","addMessage","content","className","prevMessages","sendMessage","trim","prevHistory","role","payload","history","JSON","stringify","response","fetch","method","headers","body","data","json","error","console","handleKeyDown","event","key","changeFontSize","adjustment","prevSize","Math","max","min","children","xmlns","viewBox","preserveAspectRatio","d","fill","transform","onClick","id","map","msg","index","style","type","value","onChange","e","target","onKeyDown","placeholder"],"sources":["/Users/kavinrajasekaran/Documents/UCMerced/CurrentClasses/CSE120/Semcorel-LLM/Semcorel-LLM-Project/final/frontend/src/Test.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Coco from './Coco';\r\nimport './Test.css';\r\n\r\nconst Test = () => {\r\n  const [userInput, setUserInput] = useState('');\r\n  const [conversationHistory, setConversationHistory] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [fontSize, setFontSize] = useState(19); // Default font size\r\n  const navigate = useNavigate();\r\n\r\n  const addMessage = (content, className) => {\r\n    setMessages((prevMessages) => [\r\n      ...prevMessages,\r\n      { content, className },\r\n    ]);\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!userInput.trim()) return;\r\n\r\n    // Display user message\r\n    addMessage(userInput, 'user-message');\r\n    setConversationHistory((prevHistory) => [\r\n      ...prevHistory,\r\n      { role: 'user', content: userInput },\r\n    ]);\r\n    setUserInput('');\r\n\r\n    try {\r\n      setIsTyping(true); // Show typing animation\r\n\r\n      // Prepare JSON data\r\n      const payload = {\r\n        userInput: userInput,\r\n        history: JSON.stringify(conversationHistory),\r\n      };\r\n\r\n      // Send message to the server\r\n      const response = await fetch('/submit', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      setIsTyping(false); // Hide typing animation\r\n\r\n      // Display bot response\r\n      addMessage(data.response, 'bot-message');\r\n      setConversationHistory((prevHistory) => [\r\n        ...prevHistory,\r\n        { role: 'assistant', content: data.response },\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setIsTyping(false); // Hide typing animation\r\n      addMessage('An error occurred while sending your message.', 'bot-message');\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  const changeFontSize = (adjustment) => {\r\n    setFontSize((prevSize) => Math.max(12, Math.min(36, prevSize + adjustment))); // Restrict between 12px and 36px\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"triangle-container\">\r\n        <svg className=\"triangle\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 125\" preserveAspectRatio=\"none\">\r\n            <path className=\"wave\" d=\"M 0,50 Q 20,35 45,40 T 100,15 L 100,0 L 0,0 Z\" fill=\"#5A9BFF\" transform=\"skewY(-15)\" />\r\n        </svg>\r\n        <button className=\"btn-invis\" onClick={() => navigate('/')}>\r\n          <span className=\"material-icons invis\">arrow_back_ios</span>\r\n        </button>\r\n        <div className=\"coco-container\">\r\n          <Coco className=\"coco-small\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"font-size-buttons\">\r\n        <button onClick={() => changeFontSize(-2)}>A-</button>\r\n        <button onClick={() => changeFontSize(2)}>A+</button>\r\n      </div>\r\n\r\n      {/* Chat container */}\r\n      <div className=\"chat-container\">\r\n        <div id=\"chat-box\" className=\"chat-box\">\r\n          {messages.map((msg, index) => (\r\n            <div key={index} className={`chat-message ${msg.className}`} style={{ fontSize: `${fontSize}px` }}> \r\n            {msg.content}\r\n          </div>\r\n          ))}\r\n          {isTyping && (\r\n            <div className=\"chat-message bot-message typing-animation\">\r\n              <span>.</span>\r\n              <span>.</span>\r\n              <span>.</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <input\r\n            type=\"text\"\r\n            value={userInput}\r\n            onChange={(e) => setUserInput(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n            placeholder=\"Type a message...\"\r\n          />\r\n          <button onClick={sendMessage}>\r\n            <span className=\"material-icons icon-send\">send</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}