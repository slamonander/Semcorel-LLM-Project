{"ast":null,"code":"// src/App.js\nimport React from'react';import{BrowserRouter as Router,Routes,Route,useLocation,useNavigate}from'react-router-dom';import SpeakPage from'./SpeakPage';import TypePage from'./TypePage';import Coco from'./Coco';import Test from'./Test';import'./index.css';import'./Coco.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const location=useLocation();const navigate=useNavigate();return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[location.pathname==='/'&&/*#__PURE__*/_jsxs(\"header\",{className:\"header-bubble\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Hello\"}),/*#__PURE__*/_jsx(\"center\",{children:/*#__PURE__*/_jsx(\"p\",{className:\"tagline\",children:\"How can I help you today?\"})})]}),location.pathname==='/'&&/*#__PURE__*/_jsx(Coco,{className:\"coco\"}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"btn\",onClick:()=>navigate('/speak'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"material-icons icon\",children:\"mic\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Speak\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:()=>navigate('/type'),children:\"Ignore\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn\",onClick:()=>navigate('/test'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"material-icons icon\",children:\"keyboard\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Type\"]})]})}),/*#__PURE__*/_jsx(Route,{path:\"/speak\",element:/*#__PURE__*/_jsx(SpeakPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/type\",element:/*#__PURE__*/_jsx(TypePage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/test\",element:/*#__PURE__*/_jsx(Test,{})})]})]});}const AppWrapper=()=>/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(App,{})});export default AppWrapper;","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","useLocation","useNavigate","SpeakPage","TypePage","Coco","Test","jsx","_jsx","jsxs","_jsxs","App","location","navigate","className","children","pathname","path","element","onClick","AppWrapper"],"sources":["/Users/kavinrajasekaran/Documents/UCMerced/CurrentClasses/CSE120/Semcorel-LLM/Semcorel-LLM-Project/final/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, useLocation, useNavigate } from 'react-router-dom';\nimport SpeakPage from './SpeakPage';\nimport TypePage from './TypePage';\nimport Coco from './Coco';\nimport Test from './Test';\nimport './index.css';\nimport './Coco.css';\n\nfunction App() {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"container\">\n      {/* Conditionally render Header only on the home page */}\n      {location.pathname === '/' && (\n        <header className=\"header-bubble\">\n          <h1>Hello</h1>\n          <center><p className=\"tagline\">How can I help you today?</p></center>\n        </header>\n      )}\n      {/* Add Circle component here */}\n      {location.pathname === '/' && (\n          <Coco className=\"coco\" />\n        )}\n\n      <Routes>\n        <Route path=\"/\" element={\n          <div className=\"button-container\">\n            <button className=\"btn\" onClick={() => navigate('/speak')}>\n              <span className=\"material-icons icon\">mic</span><br />Speak\n            </button>\n            <button className=\"btn\" onClick={() => navigate('/type')}>\n              Ignore\n            </button>\n            <button className=\"btn\" onClick={() => navigate('/test')}>\n              <span className=\"material-icons icon\">keyboard</span><br />Type\n            </button>\n          </div>\n        } />\n        <Route path=\"/speak\" element={<SpeakPage />} />\n        <Route path=\"/type\" element={<TypePage />} />\n        <Route path=\"/test\" element={<Test/>}/>\n      </Routes>\n    </div>\n  );\n}\n\n\nconst AppWrapper = () => (\n  <Router>\n    <App />\n  </Router>\n);\n\nexport default AppWrapper;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,CAAEC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CACnG,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,MAAO,aAAa,CACpB,MAAO,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAAAC,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAY,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAE9B,mBACEQ,KAAA,QAAKI,SAAS,CAAC,WAAW,CAAAC,QAAA,EAEvBH,QAAQ,CAACI,QAAQ,GAAK,GAAG,eACxBN,KAAA,WAAQI,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC/BP,IAAA,OAAAO,QAAA,CAAI,OAAK,CAAI,CAAC,cACdP,IAAA,WAAAO,QAAA,cAAQP,IAAA,MAAGM,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAC,2BAAyB,CAAG,CAAC,CAAQ,CAAC,EAC/D,CACT,CAEAH,QAAQ,CAACI,QAAQ,GAAK,GAAG,eACtBR,IAAA,CAACH,IAAI,EAACS,SAAS,CAAC,MAAM,CAAE,CACzB,cAEHJ,KAAA,CAACX,MAAM,EAAAgB,QAAA,eACLP,IAAA,CAACR,KAAK,EAACiB,IAAI,CAAC,GAAG,CAACC,OAAO,cACrBR,KAAA,QAAKI,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BL,KAAA,WAAQI,SAAS,CAAC,KAAK,CAACK,OAAO,CAAEA,CAAA,GAAMN,QAAQ,CAAC,QAAQ,CAAE,CAAAE,QAAA,eACxDP,IAAA,SAAMM,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAAC,KAAG,CAAM,CAAC,cAAAP,IAAA,QAAK,CAAC,QACxD,EAAQ,CAAC,cACTA,IAAA,WAAQM,SAAS,CAAC,KAAK,CAACK,OAAO,CAAEA,CAAA,GAAMN,QAAQ,CAAC,OAAO,CAAE,CAAAE,QAAA,CAAC,QAE1D,CAAQ,CAAC,cACTL,KAAA,WAAQI,SAAS,CAAC,KAAK,CAACK,OAAO,CAAEA,CAAA,GAAMN,QAAQ,CAAC,OAAO,CAAE,CAAAE,QAAA,eACvDP,IAAA,SAAMM,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAAC,UAAQ,CAAM,CAAC,cAAAP,IAAA,QAAK,CAAC,OAC7D,EAAQ,CAAC,EACN,CACN,CAAE,CAAC,cACJA,IAAA,CAACR,KAAK,EAACiB,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAEV,IAAA,CAACL,SAAS,GAAE,CAAE,CAAE,CAAC,cAC/CK,IAAA,CAACR,KAAK,EAACiB,IAAI,CAAC,OAAO,CAACC,OAAO,cAAEV,IAAA,CAACJ,QAAQ,GAAE,CAAE,CAAE,CAAC,cAC7CI,IAAA,CAACR,KAAK,EAACiB,IAAI,CAAC,OAAO,CAACC,OAAO,cAAEV,IAAA,CAACF,IAAI,GAAC,CAAE,CAAC,CAAC,EACjC,CAAC,EACN,CAAC,CAEV,CAGA,KAAM,CAAAc,UAAU,CAAGA,CAAA,gBACjBZ,IAAA,CAACV,MAAM,EAAAiB,QAAA,cACLP,IAAA,CAACG,GAAG,GAAE,CAAC,CACD,CACT,CAED,cAAe,CAAAS,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}