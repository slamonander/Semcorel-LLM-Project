{"ast":null,"code":"var _jsxFileName = \"/Users/kavinrajasekaran/Documents/UCMerced/CurrentClasses/CSE120/Semcorel-LLM/Semcorel-LLM-Project/final/frontend/src/TypePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Coco from './Coco';\nimport './TypePage.css';\nimport './CocoSmall.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypePage = () => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [conversationHistory, setConversationHistory] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const addMessage = (content, className) => {\n    setMessages(prevMessages => [...prevMessages, {\n      content,\n      className\n    }]);\n  };\n  const sendMessage = async () => {\n    if (!userInput.trim()) return;\n\n    // Display user message\n    addMessage(userInput, 'user-message');\n    setConversationHistory(prevHistory => [...prevHistory, {\n      role: 'user',\n      content: userInput\n    }]);\n    setUserInput('');\n    try {\n      // Prepare JSON data\n      const payload = {\n        userInput: userInput,\n        history: JSON.stringify(conversationHistory)\n      };\n\n      // Send message to the server using a relative URL\n      const response = await fetch('/submit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n\n      // Display bot response\n      addMessage(data.response, 'bot-message');\n      setConversationHistory(prevHistory => [...prevHistory, {\n        role: 'assistant',\n        content: data.response\n      }]);\n    } catch (error) {\n      console.error('Error:', error);\n      addMessage('An error occurred while sending your message.', 'bot-message');\n    }\n  };\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat-box\",\n        className: \"chat-box\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${msg.className}`,\n          children: msg.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          onKeyDown: handleKeyDown,\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coco-container\",\n      children: /*#__PURE__*/_jsxDEV(Coco, {\n        className: \"coco-small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(TypePage, \"hGAtY0VvWokIrZSz9xytAnudaSM=\");\n_c = TypePage;\nexport default TypePage;\nvar _c;\n$RefreshReg$(_c, \"TypePage\");","map":{"version":3,"names":["React","useState","Coco","jsxDEV","_jsxDEV","TypePage","_s","userInput","setUserInput","conversationHistory","setConversationHistory","messages","setMessages","addMessage","content","className","prevMessages","sendMessage","trim","prevHistory","role","payload","history","JSON","stringify","response","fetch","method","headers","body","data","json","error","console","handleKeyDown","event","key","children","id","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onKeyDown","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/kavinrajasekaran/Documents/UCMerced/CurrentClasses/CSE120/Semcorel-LLM/Semcorel-LLM-Project/final/frontend/src/TypePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Coco from './Coco';\r\nimport './TypePage.css';\r\nimport './CocoSmall.css';\r\n\r\nconst TypePage = () => {\r\n    const [userInput, setUserInput] = useState('');\r\n    const [conversationHistory, setConversationHistory] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const addMessage = (content, className) => {\r\n        setMessages((prevMessages) => [\r\n            ...prevMessages,\r\n            { content, className },\r\n        ]);\r\n    };\r\n\r\n    const sendMessage = async () => {\r\n        if (!userInput.trim()) return;\r\n\r\n        // Display user message\r\n        addMessage(userInput, 'user-message');\r\n        setConversationHistory((prevHistory) => [\r\n            ...prevHistory,\r\n            { role: 'user', content: userInput },\r\n        ]);\r\n        setUserInput('');\r\n\r\n        try {\r\n            // Prepare JSON data\r\n            const payload = {\r\n                userInput: userInput,\r\n                history: JSON.stringify(conversationHistory),\r\n            };\r\n\r\n            // Send message to the server using a relative URL\r\n            const response = await fetch('/submit', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            // Display bot response\r\n            addMessage(data.response, 'bot-message');\r\n            setConversationHistory((prevHistory) => [\r\n                ...prevHistory,\r\n                { role: 'assistant', content: data.response },\r\n            ]);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            addMessage(\r\n                'An error occurred while sending your message.',\r\n                'bot-message'\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            sendMessage();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            <div className=\"chat-container\">\r\n                <div id=\"chat-box\" className=\"chat-box\">\r\n                    {messages.map((msg, index) => (\r\n                        <div key={index} className={`chat-message ${msg.className}`}>\r\n                            {msg.content}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={userInput}\r\n                        onChange={(e) => setUserInput(e.target.value)}\r\n                        onKeyDown={handleKeyDown}\r\n                        placeholder=\"Type a message...\"\r\n                    />\r\n                    <button onClick={sendMessage}>Send</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"coco-container\">\r\n                <Coco className=\"coco-small\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}