{"ast":null,"code":"var _jsxFileName = \"/Users/kavinrajasekaran/Documents/UCMerced/CurrentClasses/CSE120/Semcorel-LLM/Semcorel-LLM-Project/final/frontend/src/SpeakPage.js\",\n  _s = $RefreshSig$();\n// // speakpage.js\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"./SpeakPage.css\"; // Import the CSS file here\n// import Avatar from \"./Avatar\";\n\n// function SpeakPage() {\n//   const [transcript, setTranscript] = useState(\"\");\n//   const [textInput, setTextInput] = useState(\"\");\n//   const [isListening, setIsListening] = useState(false);\n//   const navigate = useNavigate();\n\n//   // Function for handling Speech-to-Text\n//   const handleSpeechToText = () => {\n//     if (!(\"webkitSpeechRecognition\" in window)) {\n//       alert(\"Speech recognition is not supported in this browser.\");\n//       return;\n//     }\n\n//     const recognition = new window.webkitSpeechRecognition();\n//     recognition.lang = \"en-US\";\n//     recognition.interimResults = false;\n//     recognition.maxAlternatives = 1;\n\n//     recognition.onstart = () => setIsListening(true);\n//     recognition.onresult = (event) => {\n//       setTranscript(event.results[0][0].transcript);\n//       setIsListening(false);\n//     };\n//     recognition.onerror = (event) => {\n//       console.error(\"Speech recognition error\", event.error);\n//       setIsListening(false);\n//     };\n//     recognition.onend = () => setIsListening(false);\n\n//     recognition.start();\n//   };\n\n//   // Function for handling Text-to-Speech\n//   const handleTextToSpeech = () => {\n//     if (!(\"speechSynthesis\" in window)) {\n//       alert(\"Text-to-speech is not supported in this browser.\");\n//       return;\n//     }\n\n//     const utterance = new SpeechSynthesisUtterance(textInput);\n//     utterance.lang = \"en-US\";\n//     window.speechSynthesis.speak(utterance);\n//   };\n\n//   const handleBack = () => {\n//     navigate(\"/\");\n//   };\n\n//   return (\n//     <div className=\"speak-container\">\n//       <h1>Speech-to-Text and Text-to-Speech</h1>\n\n//       {/* Speech-to-Text Section */}\n//       <div style={{ margin: \"20px 0\" }}>\n//         <button className=\"back-button\" onClick={handleBack}>\n//           â¬… Back\n//         </button>\n//         <Avatar /> {/* Render the Avatar component */}\n//         <button\n//           onClick={handleSpeechToText}\n//           className=\"speech-button\"\n//           disabled={isListening}\n//         >\n//           {isListening ? \"Listening...\" : \"Start Speaking\"}\n//         </button>\n//         <p className=\"transcript\">Transcript: {transcript}</p>\n//       </div>\n\n//       {/* Text-to-Speech Section */}\n//       <div style={{ margin: \"20px 0\" }}>\n//         <textarea\n//           rows=\"4\"\n//           className=\"text-area\"\n//           value={textInput}\n//           onChange={(e) => setTextInput(e.target.value)}\n//           placeholder=\"Enter text to read out loud\"\n//         />\n//         <br />\n//         <button onClick={handleTextToSpeech} className=\"text-to-speech-button\">\n//           Read Text Aloud\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default SpeakPage;\n\n// src/SpeakPage.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Coco from './Coco';\nimport './SpeakPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeakPage = () => {\n  _s();\n  const [conversationHistory, setConversationHistory] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [fontSize, setFontSize] = useState(19); // Default font size\n  const [isListening, setIsListening] = useState(false);\n  const navigate = useNavigate();\n  const addMessage = (content, className) => {\n    setMessages(prevMessages => [...prevMessages, {\n      content,\n      className\n    }]);\n  };\n  const sendMessage = async messageContent => {\n    if (!messageContent.trim()) return;\n\n    // Display user message\n    addMessage(messageContent, 'user-message');\n    setConversationHistory(prevHistory => [...prevHistory, {\n      role: 'user',\n      content: messageContent\n    }]);\n    try {\n      // Prepare JSON data\n      const payload = {\n        userInput: messageContent,\n        history: JSON.stringify(conversationHistory)\n      };\n\n      // Send message to the server\n      const response = await fetch('http://localhost:8080/submit', {\n        // Specify full URL\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n\n      // Display bot response\n      addMessage(data.response, 'bot-message');\n      setConversationHistory(prevHistory => [...prevHistory, {\n        role: 'assistant',\n        content: data.response\n      }]);\n    } catch (error) {\n      console.error('Error:', error);\n      addMessage('An error occurred while sending your message.', 'bot-message');\n    }\n  };\n\n  // Function for handling Speech-to-Text\n  const handleSpeechToText = () => {\n    if (!(\"webkitSpeechRecognition\" in window)) {\n      alert(\"Speech recognition is not supported in this browser.\");\n      return;\n    }\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.lang = \"en-US\";\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n    recognition.onstart = () => setIsListening(true);\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setIsListening(false);\n      sendMessage(transcript);\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error\", event.error);\n      setIsListening(false);\n    };\n    recognition.onend = () => setIsListening(false);\n    recognition.start();\n  };\n  const changeFontSize = adjustment => {\n    setFontSize(prevSize => Math.max(12, Math.min(36, prevSize + adjustment))); // Restrict between 12px and 36px\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"triangle-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"triangle\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 100 100\",\n        preserveAspectRatio: \"none\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          className: \"wave\",\n          d: \"M 0,100 Q 20,75 45,85 T 100,15 L 100,0 L 0,0 Z\",\n          fill: \"#5A9BFF\",\n          transform: \"skewY(-25)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-invis\",\n        onClick: () => navigate('/'),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-icons invis\",\n          children: \"arrow_back_ios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coco-container\",\n        children: /*#__PURE__*/_jsxDEV(Coco, {\n          className: \"coco-small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-size-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeFontSize(-2),\n        children: \"A-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeFontSize(2),\n        children: \"A+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat-box\",\n        className: \"chat-box\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${msg.className}`,\n          style: {\n            fontSize: `${fontSize}px`\n          },\n          children: msg.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSpeechToText,\n          className: \"speech-button\",\n          disabled: isListening,\n          children: isListening ? \"Listening...\" : \"Start Speaking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeakPage, \"RnqIGMhGJFX0GNwnvDC1C7yL1ms=\", false, function () {\n  return [useNavigate];\n});\n_c = SpeakPage;\nexport default SpeakPage;\nvar _c;\n$RefreshReg$(_c, \"SpeakPage\");","map":{"version":3,"names":["React","useState","useNavigate","Coco","jsxDEV","_jsxDEV","SpeakPage","_s","conversationHistory","setConversationHistory","messages","setMessages","fontSize","setFontSize","isListening","setIsListening","navigate","addMessage","content","className","prevMessages","sendMessage","messageContent","trim","prevHistory","role","payload","userInput","history","JSON","stringify","response","fetch","method","headers","body","data","json","error","console","handleSpeechToText","window","alert","recognition","webkitSpeechRecognition","lang","interimResults","maxAlternatives","onstart","onresult","event","transcript","results","onerror","onend","start","changeFontSize","adjustment","prevSize","Math","max","min","children","xmlns","viewBox","preserveAspectRatio","d","fill","transform","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","map","msg","index","style","disabled","_c","$RefreshReg$"],"sources":["/Users/kavinrajasekaran/Documents/UCMerced/CurrentClasses/CSE120/Semcorel-LLM/Semcorel-LLM-Project/final/frontend/src/SpeakPage.js"],"sourcesContent":["// // speakpage.js\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"./SpeakPage.css\"; // Import the CSS file here\r\n// import Avatar from \"./Avatar\";\r\n\r\n// function SpeakPage() {\r\n//   const [transcript, setTranscript] = useState(\"\");\r\n//   const [textInput, setTextInput] = useState(\"\");\r\n//   const [isListening, setIsListening] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   // Function for handling Speech-to-Text\r\n//   const handleSpeechToText = () => {\r\n//     if (!(\"webkitSpeechRecognition\" in window)) {\r\n//       alert(\"Speech recognition is not supported in this browser.\");\r\n//       return;\r\n//     }\r\n\r\n//     const recognition = new window.webkitSpeechRecognition();\r\n//     recognition.lang = \"en-US\";\r\n//     recognition.interimResults = false;\r\n//     recognition.maxAlternatives = 1;\r\n\r\n//     recognition.onstart = () => setIsListening(true);\r\n//     recognition.onresult = (event) => {\r\n//       setTranscript(event.results[0][0].transcript);\r\n//       setIsListening(false);\r\n//     };\r\n//     recognition.onerror = (event) => {\r\n//       console.error(\"Speech recognition error\", event.error);\r\n//       setIsListening(false);\r\n//     };\r\n//     recognition.onend = () => setIsListening(false);\r\n\r\n//     recognition.start();\r\n//   };\r\n\r\n//   // Function for handling Text-to-Speech\r\n//   const handleTextToSpeech = () => {\r\n//     if (!(\"speechSynthesis\" in window)) {\r\n//       alert(\"Text-to-speech is not supported in this browser.\");\r\n//       return;\r\n//     }\r\n\r\n//     const utterance = new SpeechSynthesisUtterance(textInput);\r\n//     utterance.lang = \"en-US\";\r\n//     window.speechSynthesis.speak(utterance);\r\n//   };\r\n\r\n//   const handleBack = () => {\r\n//     navigate(\"/\");\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"speak-container\">\r\n//       <h1>Speech-to-Text and Text-to-Speech</h1>\r\n\r\n//       {/* Speech-to-Text Section */}\r\n//       <div style={{ margin: \"20px 0\" }}>\r\n//         <button className=\"back-button\" onClick={handleBack}>\r\n//           â¬… Back\r\n//         </button>\r\n//         <Avatar /> {/* Render the Avatar component */}\r\n//         <button\r\n//           onClick={handleSpeechToText}\r\n//           className=\"speech-button\"\r\n//           disabled={isListening}\r\n//         >\r\n//           {isListening ? \"Listening...\" : \"Start Speaking\"}\r\n//         </button>\r\n//         <p className=\"transcript\">Transcript: {transcript}</p>\r\n//       </div>\r\n \r\n//       {/* Text-to-Speech Section */}\r\n//       <div style={{ margin: \"20px 0\" }}>\r\n//         <textarea\r\n//           rows=\"4\"\r\n//           className=\"text-area\"\r\n//           value={textInput}\r\n//           onChange={(e) => setTextInput(e.target.value)}\r\n//           placeholder=\"Enter text to read out loud\"\r\n//         />\r\n//         <br />\r\n//         <button onClick={handleTextToSpeech} className=\"text-to-speech-button\">\r\n//           Read Text Aloud\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default SpeakPage;\r\n\r\n// src/SpeakPage.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Coco from './Coco';\r\nimport './SpeakPage.css';\r\n\r\nconst SpeakPage = () => {\r\n  const [conversationHistory, setConversationHistory] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [fontSize, setFontSize] = useState(19); // Default font size\r\n  const [isListening, setIsListening] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const addMessage = (content, className) => {\r\n    setMessages((prevMessages) => [\r\n      ...prevMessages,\r\n      { content, className },\r\n    ]);\r\n  };\r\n\r\n  const sendMessage = async (messageContent) => {\r\n    if (!messageContent.trim()) return;\r\n\r\n    // Display user message\r\n    addMessage(messageContent, 'user-message');\r\n    setConversationHistory((prevHistory) => [\r\n      ...prevHistory,\r\n      { role: 'user', content: messageContent },\r\n    ]);\r\n\r\n    try {\r\n      // Prepare JSON data\r\n      const payload = {\r\n        userInput: messageContent,\r\n        history: JSON.stringify(conversationHistory),\r\n      };\r\n\r\n      // Send message to the server\r\n      const response = await fetch('http://localhost:8080/submit', { // Specify full URL\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      // Display bot response\r\n      addMessage(data.response, 'bot-message');\r\n      setConversationHistory((prevHistory) => [\r\n        ...prevHistory,\r\n        { role: 'assistant', content: data.response },\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      addMessage('An error occurred while sending your message.', 'bot-message');\r\n    }\r\n  };\r\n\r\n  // Function for handling Speech-to-Text\r\n  const handleSpeechToText = () => {\r\n    if (!(\"webkitSpeechRecognition\" in window)) {\r\n      alert(\"Speech recognition is not supported in this browser.\");\r\n      return;\r\n    }\r\n\r\n    const recognition = new window.webkitSpeechRecognition();\r\n    recognition.lang = \"en-US\";\r\n    recognition.interimResults = false;\r\n    recognition.maxAlternatives = 1;\r\n\r\n    recognition.onstart = () => setIsListening(true);\r\n    recognition.onresult = (event) => {\r\n      const transcript = event.results[0][0].transcript;\r\n      setIsListening(false);\r\n      sendMessage(transcript);\r\n    };\r\n    recognition.onerror = (event) => {\r\n      console.error(\"Speech recognition error\", event.error);\r\n      setIsListening(false);\r\n    };\r\n    recognition.onend = () => setIsListening(false);\r\n\r\n    recognition.start();\r\n  };\r\n\r\n  const changeFontSize = (adjustment) => {\r\n    setFontSize((prevSize) => Math.max(12, Math.min(36, prevSize + adjustment))); // Restrict between 12px and 36px\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"triangle-container\">\r\n        <svg className=\"triangle\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\">\r\n          <path className=\"wave\" d=\"M 0,100 Q 20,75 45,85 T 100,15 L 100,0 L 0,0 Z\" fill=\"#5A9BFF\" transform=\"skewY(-25)\"/>\r\n        </svg>\r\n        <button className=\"btn-invis\" onClick={() => navigate('/')}>\r\n          <span className=\"material-icons invis\">arrow_back_ios</span>\r\n        </button>\r\n        <div className=\"coco-container\">\r\n          <Coco className=\"coco-small\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"font-size-buttons\">\r\n        <button onClick={() => changeFontSize(-2)}>A-</button>\r\n        <button onClick={() => changeFontSize(2)}>A+</button>\r\n      </div>\r\n\r\n      {/* Chat container */}\r\n      <div className=\"chat-container\">\r\n        <div id=\"chat-box\" className=\"chat-box\">\r\n          {messages.map((msg, index) => (\r\n            <div\r\n              key={index}\r\n              className={`chat-message ${msg.className}`}\r\n              style={{ fontSize: `${fontSize}px` }}\r\n            >\r\n              {msg.content}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <button\r\n            onClick={handleSpeechToText}\r\n            className=\"speech-button\"\r\n            disabled={isListening}\r\n          >\r\n            {isListening ? \"Listening...\" : \"Start Speaking\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeakPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}