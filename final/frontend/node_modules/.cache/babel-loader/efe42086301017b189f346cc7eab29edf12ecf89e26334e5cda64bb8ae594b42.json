{"ast":null,"code":"var _jsxFileName = \"/Users/kavinrajasekaran/Documents/UCMerced/CurrentClasses/CSE120/Semcorel-LLM/Semcorel-LLM-Project/final/frontend/src/SpeakPage.js\",\n  _s = $RefreshSig$();\n//\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./SpeakPage.css\"; // Import the CSS file here\nimport Avatar from \"./Avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SpeakPage() {\n  _s();\n  const [transcript, setTranscript] = useState(\"\");\n  const [textInput, setTextInput] = useState(\"\");\n  const [isListening, setIsListening] = useState(false);\n  const navigate = useNavigate();\n\n  // Function for handling Speech-to-Text\n  const handleSpeechToText = () => {\n    if (!(\"webkitSpeechRecognition\" in window)) {\n      alert(\"Speech recognition is not supported in this browser.\");\n      return;\n    }\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.lang = \"en-US\";\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n    recognition.onstart = () => setIsListening(true);\n    recognition.onresult = event => {\n      setTranscript(event.results[0][0].transcript);\n      setIsListening(false);\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error\", event.error);\n      setIsListening(false);\n    };\n    recognition.onend = () => setIsListening(false);\n    recognition.start();\n  };\n\n  // Function for handling Text-to-Speech\n  const handleTextToSpeech = () => {\n    if (!(\"speechSynthesis\" in window)) {\n      alert(\"Text-to-speech is not supported in this browser.\");\n      return;\n    }\n    const utterance = new SpeechSynthesisUtterance(textInput);\n    utterance.lang = \"en-US\";\n    window.speechSynthesis.speak(utterance);\n  };\n  const handleBack = () => {\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"speak-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Speech-to-Text and Text-to-Speech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"20px 0\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: handleBack,\n        children: \"\\u2B05 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSpeechToText,\n        className: \"speech-button\",\n        disabled: isListening,\n        children: isListening ? \"Listening...\" : \"Start Speaking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"transcript\",\n        children: [\"Transcript: \", transcript]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"20px 0\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"4\",\n        className: \"text-area\",\n        value: textInput,\n        onChange: e => setTextInput(e.target.value),\n        placeholder: \"Enter text to read out loud\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTextToSpeech,\n        className: \"text-to-speech-button\",\n        children: \"Read Text Aloud\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(SpeakPage, \"tQvUgRDUUSLSVZKHZzXrTuUq7ts=\", false, function () {\n  return [useNavigate];\n});\n_c = SpeakPage;\nexport default SpeakPage;\nvar _c;\n$RefreshReg$(_c, \"SpeakPage\");","map":{"version":3,"names":["React","useState","useNavigate","Avatar","jsxDEV","_jsxDEV","SpeakPage","_s","transcript","setTranscript","textInput","setTextInput","isListening","setIsListening","navigate","handleSpeechToText","window","alert","recognition","webkitSpeechRecognition","lang","interimResults","maxAlternatives","onstart","onresult","event","results","onerror","console","error","onend","start","handleTextToSpeech","utterance","SpeechSynthesisUtterance","speechSynthesis","speak","handleBack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","onClick","disabled","rows","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/kavinrajasekaran/Documents/UCMerced/CurrentClasses/CSE120/Semcorel-LLM/Semcorel-LLM-Project/final/frontend/src/SpeakPage.js"],"sourcesContent":["//\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./SpeakPage.css\"; // Import the CSS file here\r\nimport Avatar from \"./Avatar\";\r\n\r\nfunction SpeakPage() {\r\n  const [transcript, setTranscript] = useState(\"\");\r\n  const [textInput, setTextInput] = useState(\"\");\r\n  const [isListening, setIsListening] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Function for handling Speech-to-Text\r\n  const handleSpeechToText = () => {\r\n    if (!(\"webkitSpeechRecognition\" in window)) {\r\n      alert(\"Speech recognition is not supported in this browser.\");\r\n      return;\r\n    }\r\n\r\n    const recognition = new window.webkitSpeechRecognition();\r\n    recognition.lang = \"en-US\";\r\n    recognition.interimResults = false;\r\n    recognition.maxAlternatives = 1;\r\n\r\n    recognition.onstart = () => setIsListening(true);\r\n    recognition.onresult = (event) => {\r\n      setTranscript(event.results[0][0].transcript);\r\n      setIsListening(false);\r\n    };\r\n    recognition.onerror = (event) => {\r\n      console.error(\"Speech recognition error\", event.error);\r\n      setIsListening(false);\r\n    };\r\n    recognition.onend = () => setIsListening(false);\r\n\r\n    recognition.start();\r\n  };\r\n\r\n  // Function for handling Text-to-Speech\r\n  const handleTextToSpeech = () => {\r\n    if (!(\"speechSynthesis\" in window)) {\r\n      alert(\"Text-to-speech is not supported in this browser.\");\r\n      return;\r\n    }\r\n\r\n    const utterance = new SpeechSynthesisUtterance(textInput);\r\n    utterance.lang = \"en-US\";\r\n    window.speechSynthesis.speak(utterance);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"speak-container\">\r\n      <h1>Speech-to-Text and Text-to-Speech</h1>\r\n\r\n      {/* Speech-to-Text Section */}\r\n      <div style={{ margin: \"20px 0\" }}>\r\n        <button className=\"back-button\" onClick={handleBack}>\r\n          â¬… Back\r\n        </button>\r\n        <Avatar /> {/* Render the Avatar component */}\r\n        <button\r\n          onClick={handleSpeechToText}\r\n          className=\"speech-button\"\r\n          disabled={isListening}\r\n        >\r\n          {isListening ? \"Listening...\" : \"Start Speaking\"}\r\n        </button>\r\n        <p className=\"transcript\">Transcript: {transcript}</p>\r\n      </div>\r\n \r\n      {/* Text-to-Speech Section */}\r\n      <div style={{ margin: \"20px 0\" }}>\r\n        <textarea\r\n          rows=\"4\"\r\n          className=\"text-area\"\r\n          value={textInput}\r\n          onChange={(e) => setTextInput(e.target.value)}\r\n          placeholder=\"Enter text to read out loud\"\r\n        />\r\n        <br />\r\n        <button onClick={handleTextToSpeech} className=\"text-to-speech-button\">\r\n          Read Text Aloud\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpeakPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}