{"ast":null,"code":"import React,{useState}from'react';import Coco from'./Coco';import'./TypePage.css';import'./CocoSmall.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TypePage=()=>{const[userInput,setUserInput]=useState('');const[conversationHistory,setConversationHistory]=useState([]);const[messages,setMessages]=useState([]);const addMessage=(content,className)=>{setMessages(prevMessages=>[...prevMessages,{content,className}]);};const sendMessage=async()=>{if(!userInput.trim())return;// Display user message\naddMessage(userInput,'user-message');setConversationHistory(prevHistory=>[...prevHistory,{role:'user',content:userInput}]);setUserInput('');try{// Prepare JSON data\nconst payload={userInput:userInput,history:JSON.stringify(conversationHistory)};// Send message to the server using a relative URL\nconst response=await fetch('/submit',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});const data=await response.json();// Display bot response\naddMessage(data.response,'bot-message');setConversationHistory(prevHistory=>[...prevHistory,{role:'assistant',content:data.response}]);}catch(error){console.error('Error:',error);addMessage('An error occurred while sending your message.','bot-message');}};const handleKeyDown=event=>{if(event.key==='Enter'){sendMessage();}};return/*#__PURE__*/_jsxs(\"div\",{className:\"main-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"chat-box\",className:\"chat-box\",children:messages.map((msg,index)=>/*#__PURE__*/_jsx(\"div\",{className:`chat-message ${msg.className}`,children:msg.content},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userInput,onChange:e=>setUserInput(e.target.value),onKeyDown:handleKeyDown,placeholder:\"Type a message...\"}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,children:\"Send\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"coco-container\",children:/*#__PURE__*/_jsx(Coco,{className:\"coco-small\"})})]});};export default TypePage;","map":{"version":3,"names":["React","useState","Coco","jsx","_jsx","jsxs","_jsxs","TypePage","userInput","setUserInput","conversationHistory","setConversationHistory","messages","setMessages","addMessage","content","className","prevMessages","sendMessage","trim","prevHistory","role","payload","history","JSON","stringify","response","fetch","method","headers","body","data","json","error","console","handleKeyDown","event","key","children","id","map","msg","index","type","value","onChange","e","target","onKeyDown","placeholder","onClick"],"sources":["/Users/kavinrajasekaran/Documents/UCMerced/CurrentClasses/CSE120/Semcorel-LLM/Semcorel-LLM-Project/final/frontend/src/TypePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Coco from './Coco';\r\nimport './TypePage.css';\r\nimport './CocoSmall.css';\r\n\r\nconst TypePage = () => {\r\n    const [userInput, setUserInput] = useState('');\r\n    const [conversationHistory, setConversationHistory] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const addMessage = (content, className) => {\r\n        setMessages((prevMessages) => [\r\n            ...prevMessages,\r\n            { content, className },\r\n        ]);\r\n    };\r\n\r\n    const sendMessage = async () => {\r\n        if (!userInput.trim()) return;\r\n\r\n        // Display user message\r\n        addMessage(userInput, 'user-message');\r\n        setConversationHistory((prevHistory) => [\r\n            ...prevHistory,\r\n            { role: 'user', content: userInput },\r\n        ]);\r\n        setUserInput('');\r\n\r\n        try {\r\n            // Prepare JSON data\r\n            const payload = {\r\n                userInput: userInput,\r\n                history: JSON.stringify(conversationHistory),\r\n            };\r\n\r\n            // Send message to the server using a relative URL\r\n            const response = await fetch('/submit', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            // Display bot response\r\n            addMessage(data.response, 'bot-message');\r\n            setConversationHistory((prevHistory) => [\r\n                ...prevHistory,\r\n                { role: 'assistant', content: data.response },\r\n            ]);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            addMessage(\r\n                'An error occurred while sending your message.',\r\n                'bot-message'\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            sendMessage();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            <div className=\"chat-container\">\r\n                <div id=\"chat-box\" className=\"chat-box\">\r\n                    {messages.map((msg, index) => (\r\n                        <div key={index} className={`chat-message ${msg.className}`}>\r\n                            {msg.content}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={userInput}\r\n                        onChange={(e) => setUserInput(e.target.value)}\r\n                        onKeyDown={handleKeyDown}\r\n                        placeholder=\"Type a message...\"\r\n                    />\r\n                    <button onClick={sendMessage}>Send</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"coco-container\">\r\n                <Coco className=\"coco-small\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}